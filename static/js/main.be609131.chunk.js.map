{"version":3,"sources":["_misc/constants.js","Components/GoogleMap/Marker.js","Components/GoogleMap/GoogleMap.js","Components/Desktop/ContactDesktop/ContactDesktop.js","Components/Desktop/ContactListDesktop/ContactListDesktop.js","Components/Mobile/ContactMobile/ContactMobile.js","Components/Mobile/ContactListMobile/ContactListMobile.js","Components/ContactList/ContactList.js","_misc/useViewport.js","_misc/functions.js","App.js","reportWebVitals.js","index.js"],"names":["palette","Marker","props","markerColour","letter","userLetter","style","backgroundColor","size","GoogleMap","lat","lng","markerProps","height","width","bootstrapURLKeys","key","defaultCenter","fullscreenControl","defaultZoom","options","ContactDesktop","contact","hoverRowID","colour","useState","mapVisible","setVisible","googleMapProps","parseFloat","address","geo","name","personalMenu","Item","username","email","website","companyMenu","company","catchPhrase","bs","addressMenu","street","suite","city","zipcode","textAlign","tableLayout","id","fontWeight","paddingLeft","justifyContent","overlay","placement","visible","title","onVisibleChange","flag","phone","ContactListDesktop","contacts","contactList","map","c","ContactMobile","menu","onClick","e","fontSize","ContactListMobile","ContactList","window","innerWidth","setWidth","useEffect","handleWindowResize","addEventListener","removeEventListener","useViewport","setContactList","contactListFilter","setContactListFilter","loading","setLoading","error","setError","axios","get","then","res","i","data","length","Math","floor","random","sort","a","b","catch","err","console","log","color","ContactsOutlined","onChange","currentValue","target","value","updateState","filter","toLowerCase","valLength","substring","placeholder","tip","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be609131.chunk.js","sourcesContent":["export const palette = [\n    \"50514F\" ,\n    \"F25F5C\" ,\n    \"FFE066\" ,\n    \"70C1B3\"\n];\n\nexport const GOOGLE_KEY = \"AIzaSyB26GOTxI_f5AhTYcZq4mNTIbRvb8Ilx08\";\n\nexport const USER_API = 'https://jsonplaceholder.typicode.com/users';","import { Avatar } from 'antd';\n\nexport const Marker = props => {\n    const markerColour = props.props.markerColour;\n    const letter = props.props.userLetter;\n    return <Avatar style={{backgroundColor: markerColour}} size={20}>{letter}</Avatar>\n} \n\n","import { GOOGLE_KEY } from '../../_misc/constants';\nimport { Marker } from './Marker';\n\nimport GoogleMapReact from 'google-map-react';\n\n\n\n\n\n\nconst GoogleMap = props => {\n    const lat = props.lat;\n    const lng = props.lng;\n    const size = props.size;\n\n    const markerProps = {\n        userLetter: props.userLetter,\n        markerColour: props.markerColour\n    }\n\n\n\n\n\n\n    return(\n        <div style={{ height: size, width: size}}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: GOOGLE_KEY}}\n          defaultCenter={{lat: lat, lng: lng}}\n          fullscreenControl={false}\n          defaultZoom={11}\n          options={{fullscreenControl: false}}\n        >\n            <Marker\n                lat={lat}\n                lng={lng}\n                props={markerProps}\n            />\n        </GoogleMapReact>\n      </div>\n    );\n}\n\nexport default GoogleMap;","\nimport GoogleMap from '../../GoogleMap/GoogleMap';\n\nimport { Menu, Dropdown, Avatar } from 'antd';\nimport { useState } from 'react';\n\n\n\n\n\n\nconst ContactDesktop = props => {\n    const contact = props.contact;\n    const hoverRowID = `idrow${contact.colour}`;\n    const [mapVisible, setVisible] = useState(false);\n\n    const googleMapProps = {\n        lat: parseFloat(contact.address.geo.lat),\n        lng: parseFloat(contact.address.geo.lng),\n        size: '300px',\n        userLetter: contact.name[0],\n        markerColour: `#${contact.colour}`\n    }\n\n    const personalMenu = (\n        <Menu>\n            <Menu.Item>\n                <b>Username: </b> {contact.username}\n            </Menu.Item>\n            <Menu.Item>\n                <b>Email: </b> {contact.email}\n            </Menu.Item>\n            <Menu.Item>\n                <b>Website: </b> {contact.website}\n            </Menu.Item>\n        </Menu>\n    );\n\n    const companyMenu = (\n        <Menu>\n            <Menu.Item>\n                <b>Company Name: </b> {contact.company.name}\n            </Menu.Item>\n\n            <Menu.Item>\n                <b>Catch Phrase: </b> {contact.company.catchPhrase}\n            </Menu.Item>\n            <Menu.Item>\n                <b>BS: </b> {contact.company.bs}\n            </Menu.Item>\n        </Menu>\n    );\n\n    const addressMenu = (\n        <Menu>\n            <Menu.Item>\n                <b>Street Name: </b> {contact.address.street}\n            </Menu.Item>\n            <Menu.Item>\n                <b>Suite: </b> {contact.address.suite}\n            </Menu.Item>\n            <Menu.Item>\n                <b>City: </b> {contact.address.city}\n            </Menu.Item>\n            <Menu.Item>\n                <b>Zipcode: </b> {contact.address.zipcode}\n            </Menu.Item>\n            <Menu.Item >\n                <div>\n                    <GoogleMap {...googleMapProps}/>\n                </div>    \n            </Menu.Item>\n        </Menu>\n    );\n\n\n\n\n\n\n    return(\n        <div >\n            <table style={{width:\"100%\", textAlign: \"center\", tableLayout: \"fixed\"}}>\n                <tbody>\n                    <tr id={hoverRowID}>\n                        <td>\n                            <div id='wrapper'>\n                                <div id=\"flexbox\">\n                                    <div>\n                                        <Avatar \n                                            style={{backgroundColor: `#${contact.colour}`, fontWeight: 'bold'}} \n                                            size={50}\n                                        >\n                                            {contact.name[0]}\n                                        </Avatar>\n                                    </div>\n                                    <div id=\"common\" style={{paddingLeft: \"5%\", fontWeight: 'bold'}}>\n                                        {contact.name}\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n                        \n                        <td>\n                            <div>\n                                <div id='wrapper'>\n                                    <div style ={{justifyContent: 'space-between'}} id=\"flexbox\">\n                                        <Dropdown overlay={personalMenu} placement=\"bottomCenter\">\n                                            <div id=\"common\">Personal</div>\n                                        </Dropdown>\n                                        <Dropdown overlay={companyMenu} placement=\"bottomCenter\">\n                                            <div id=\"common\">Company</div>\n                                        </Dropdown>\n                                        <Dropdown \n                                            overlay={addressMenu} \n                                            placement=\"bottomCenter\"\n                                            visible={mapVisible} \n                                            title=\"Map\" \n                                            onVisibleChange={ flag => { setVisible(flag) }}\n                                        >\n                                            <div id=\"common\">Address</div>\n                                        </Dropdown>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n\n                        <td>\n                            <div id=\"wrapper\">\n                                <div id=\"common\"  style={{textAlign: 'right'}}>\n                                    {contact.phone}\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>               \n        </div>\n    );\n}\n\nexport default ContactDesktop;","import ContactDesktop from '../ContactDesktop/ContactDesktop';\n\nconst ContactListDesktop = props => {\n    const contactList = props.contactList;\n\n    const contacts = contactList.map(c => {\n        return <ContactDesktop key={c.id} contact={c} />\n    });\n    \n    return <div>{contacts}</div>\n}\n\nexport default ContactListDesktop;","import  GoogleMap  from '../../GoogleMap/GoogleMap'\n\nimport { useState } from 'react';\nimport { Avatar, Dropdown, Menu } from 'antd';\n\n\nconst ContactMobile = props => {\n    const contact = props.contact;\n    const hoverRowID = `idrow${contact.colour}`;\n    const [mapVisible, setVisible] = useState(false);\n\n    const googleMapProps = {\n        lat: parseFloat(contact.address.geo.lat),\n        lng: parseFloat(contact.address.geo.lng),\n        size: '300px',\n        userLetter: contact.name[0],\n        markerColour: `#${contact.colour}`\n    }\n\n    const menu = (\n        <Menu onClick={e => {\n            if(e.key !== \"12\") setVisible(false);\n        }}>\n            <Menu.Item key=\"1\">\n                <b style={{fontSize:\"20px\"}}>{contact.phone}</b> \n            </Menu.Item>\n\n            <Menu.Item key=\"2\">\n                <b>Username: </b> {contact.username}\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n                <b>Email: </b> {contact.email}\n            </Menu.Item>\n            <Menu.Item key=\"4\">\n                <b>Website: </b> {contact.website}\n            </Menu.Item>\n            <Menu.Item key=\"5\">\n                <b>Company Name: </b> {contact.company.name}\n            </Menu.Item>\n            <Menu.Item key=\"6\">\n                <b>Catch Phrase: </b> {contact.company.catchPhrase}\n            </Menu.Item>\n            <Menu.Item key=\"7\">\n                <b>BS: </b> {contact.company.bs}\n            </Menu.Item>\n            <Menu.Item key=\"8\">\n                <b>Street Name: </b> {contact.address.street}\n            </Menu.Item>\n            <Menu.Item key=\"9\">\n                <b>Suite: </b> {contact.address.suite}\n            </Menu.Item>\n            <Menu.Item key=\"10\">\n                <b>City: </b> {contact.address.city}\n            </Menu.Item>\n            <Menu.Item key=\"11\">\n                <b>Zipcode: </b> {contact.address.zipcode}\n            </Menu.Item>\n            <Menu.Item key=\"12\">\n                <div>\n                    <GoogleMap {...googleMapProps}/>\n                </div>    \n            </Menu.Item>\n        </Menu>\n    );\n\n\n\n\n\n\n    return(\n        <div id={hoverRowID}>    \n            <div id='wrapper'>\n                <div id=\"flexbox\">\n                    <div>\n                        <Avatar style={{backgroundColor: `#${contact.colour}`, fontWeight: 'bold'}} size={50}>{contact.name[0]}</Avatar>\n                    </div>\n                    <Dropdown \n                        overlay={menu} \n                        placement=\"topRight\"\n                        visible={mapVisible} \n                        title=\"Map\" \n                        onVisibleChange={ flag => { setVisible(flag) }}\n                    >\n                        <div id=\"common\" style={{paddingLeft: \"10%\", fontWeight: 'bold'}} >\n                            {contact.name}\n                        </div>\n                    </Dropdown>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ContactMobile;","import ContactMobile from '../ContactMobile/ContactMobile';\n\nconst ContactListMobile = props => {\n    const contactList = props.contactList;\n\n    const contacts = contactList.map(c => {\n        return <ContactMobile key={c.id} contact={c} />\n    });\n    \n    return <div>{contacts}</div>\n}\n\nexport default ContactListMobile;","import '../../_assets/CSS/Contacts.css';\n\nimport { useViewport } from '../../_misc/useViewport';\nimport { getRandomColour } from '../../_misc/functions';\nimport { USER_API } from '../../_misc/constants';\nimport ContactListDesktop from '../Desktop/ContactListDesktop/ContactListDesktop';\nimport ContactListMobile from '../Mobile/ContactListMobile/ContactListMobile';\n\nimport { ContactsOutlined } from '@ant-design/icons';\nimport { Spin, Input } from 'antd';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\n\n\nconst ContactList = () => {\n    const { width } = useViewport();\n    const [contactList, setContactList] = useState([]);\n    const [contactListFilter, setContactListFilter] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const breakpoint = 900;\n\n\n\n\n\n    const filterNames = e => {\n        let currentValue = e.target.value;\n        const updateState = contactListFilter.filter(contact => {\n            const value = currentValue.toLowerCase();\n            const valLength = value.length;\n            const contactName = contact.name.toLowerCase();\n            const contactSub = contactName.substring(0, valLength);\n\n            return contactSub === value;\n        });\n        \n        setContactList(updateState);\n    }\n\n\n\n\n\n\n    useEffect(() => {\n        setLoading(true);\n\n        axios.get(USER_API)\n        .then(res => {\n            for(let i = 0; i < res.data.length; i++) res.data[i].colour = getRandomColour();\n            res.data.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\n            setLoading(false);\n            setContactList(res.data);\n            setContactListFilter(res.data);\n        })\n        .catch(err => {\n            setLoading(false);\n            setError(true);\n            console.log(err);\n        });\n    }, []);\n\n\n\n\n\n    \n    return(\n        <div>\n            <div id=\"header\">\n                <div style = {{paddingLeft: '4%', color: 'white', fontSize:'40px'}}>{<ContactsOutlined />} Contacts</div>\n            </div>\n            <div>\n                <Input style={{height: '45px'}} onChange={filterNames} placeholder=\"Search Contacts\"></Input>\n            </div>\n            {\n                loading ? <div style={{textAlign: 'center'}}><Spin size='large' tip='loading...'/></div> \n                : error ? <div style={{textAlign: 'center', color: '#F25F5C'}}>Oops! Issue loading page. Please try refreshing.</div>\n                : width < breakpoint ? <ContactListMobile contactList={contactList}/> \n                : <ContactListDesktop contactList={contactList}/> \n            } \n        </div>\n    ) \n}\n\nexport default ContactList;","import { useEffect, useState } from 'react';\n\nexport const useViewport = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n  \n   useEffect(() => {\n      const handleWindowResize = () => setWidth(window.innerWidth);\n      window.addEventListener(\"resize\", handleWindowResize);\n      return () => window.removeEventListener(\"resize\", handleWindowResize);\n    }, []);\n  \n    return { width };\n}","import { palette } from './constants';\n\nexport const getRandomColour = () => {\n    return palette[Math.floor(Math.random() * palette.length)];\n}","import './App.less';\nimport ContactList from './Components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}